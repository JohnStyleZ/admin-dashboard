<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Admin Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body { font-family: 'Segoe UI', sans-serif; background-color: #f7f9fc; }
    .sidebar { width: 250px; height: 100vh; background-color: #343a40; position: fixed; color: #fff; }
    .sidebar h2 { padding: 20px; font-size: 20px; background-color: #212529; margin: 0; }
    .sidebar a { color: #adb5bd; display: block; padding: 15px 20px; text-decoration: none; }
    .sidebar a:hover, .sidebar a.active { background-color: #495057; color: #fff; }
    .main { margin-left: 250px; padding: 30px; }
    .card { border: none; border-radius: 10px; }
    .stats-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; }
    .calendar-day {
      background: #fff; border: 1px solid #dee2e6;
      padding: 6px; text-align: center; border-radius: 4px; font-size: 12px;
    }
    .calendar-day {
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: 32px;
      height: 32px;
      line-height: 1;
      box-sizing: border-box;
      text-align: center;
    }
    
    .calendar-day.session {
      background-color: #0d6efd;
      color: #fff;
      font-weight: bold;
    }

    .calendar-day.session { background-color: #0d6efd; color: #fff; font-weight: bold; }
    .calendar-day.blank { background: none; border: none; }
    #calendar { display: grid; grid-template-columns: repeat(7, 1fr); gap: 3px; }
  </style>
</head>
<body>

<div class="sidebar">
  <h2>Admin Panel</h2>
  <a class="active" href="/admin/dashboard">Dashboard</a>
  <a href="#">Analytics</a>
  <a href="#">Reports</a>
  <a href="#">Settings</a>
  <a href="/admin/logout">Logout</a>
</div>

<div class="main">
  <h2 class="mb-4">Welcome, <%= admin.username %></h2>
  <div class="stats-grid">
    <div class="card p-4 shadow-sm"><h5>Total Participants</h5><p class="fs-4"><%= totalParticipants %></p></div>
    <div class="card p-4 shadow-sm"><h5>Gender Ratio</h5><p>ðŸ‘¨ <%= maleCount %> | ðŸ‘© <%= femaleCount %></p></div>
    <div class="card p-4 shadow-sm"><h5>Average Cost per Person</h5><p class="fs-4">$<%= avgCost %></p></div>
    <div class="card p-4 shadow-sm"><h5>Total Spent</h5><p class="fs-4">$<%= totalSpent %></p></div>
  </div>

<div class="row mt-4">
  <!-- Left Column: Gender Chart -->
  <div class="col-md-9 mb-4">
    <div class="card p-3 shadow-sm">
      <h5 class="mb-3">Session Gender Breakdown</h5>
      <div style="height: 545px;">
        <canvas id="genderChart"></canvas>
      </div>
    </div>

  </div>

  <!-- Right Column: Calendar + Top 10 -->
  <div class="col-md-3 mb-4">
    <div class="card p-3 shadow-sm">
      <h5 class="mb-2">Post-Events</h5>
      <select id="calendarMonth" class="form-select form-select-sm mb-2"></select>
      <div class="calendar-header d-grid" style="grid-template-columns: repeat(7, 1fr); font-weight: bold; font-size: 13px; text-align: center; margin-bottom: 5px;">
        <div>Sun</div><div>Mon</div><div>Tue</div><div>Wed</div><div>Thu</div><div>Fri</div><div>Sat</div>
      </div>
      <div id="calendar"></div>
    </div>

    <div class="card p-3 shadow-sm mt-3">
      <h5 class="mb-2">Top 10 Participants</h5>
      <ol class="mt-2 small">
        <% topParticipants.forEach(p => { %>
          <li><%= p.name %> - <%= p.count %> sessions</li>
        <% }) %>
      </ol>
    </div>
  </div>
</div>




  <div class="card p-4 shadow-sm">
    <div class="d-flex justify-content-between align-items-center mb-3">
      <h5 class="mb-0">Daily Spend - Current Month</h5>
      <select id="chartMonth" class="form-select form-select-sm w-auto"></select>
    </div>
    <canvas id="trendChart" height="100"></canvas>
  </div>
</div>

<script>
  const genderData = <%- JSON.stringify(sessionGenderData) %>;
  const genderLabels = genderData.map(s => {
    const date = new Date(s.start_time);
    return `${date.getMonth() + 1}/${date.getDate()}`;
  });
  const maleCounts = genderData.map(s => s.male_count);
  const femaleCounts = genderData.map(s => s.female_count);

  const genderCtx = document.getElementById('genderChart').getContext('2d');
  new Chart(genderCtx, {
    type: 'bar',
    data: {
      labels: genderLabels,
      datasets: [
        {
          label: 'Male',
          data: maleCounts,
          backgroundColor: 'rgba(54, 162, 235, 0.7)'
        },
        {
          label: 'Female',
          data: femaleCounts,
          backgroundColor: 'rgba(255, 99, 132, 0.7)'
        }
      ]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      plugins: {
        legend: { position: 'top' }
      },
      scales: {
        x: {
          stacked: true
        },
        y: {
          stacked: true,
          beginAtZero: true,
          title: {
            display: true,
            text: 'Number of People'
          }
        }
      }
    }
  });
  const sessionDates = <%- JSON.stringify(sessionDates) %>;
  const dailyChartData = <%- JSON.stringify(dailyChartByMonth) %>;

  // Calendar logic
  function populateCalendar(year, month) {
    const container = document.getElementById("calendar");
    container.innerHTML = "";
    const firstDay = new Date(year, month, 1).getDay();
    const daysInMonth = new Date(year, month + 1, 0).getDate();

    for (let i = 0; i < firstDay; i++) {
      const blank = document.createElement("div");
      blank.classList.add("calendar-day", "blank");
      container.appendChild(blank);
    }

    for (let day = 1; day <= daysInMonth; day++) {
      const dateStr = year + '-' + String(month + 1).padStart(2, '0') + '-' + String(day).padStart(2, '0');
      const dayEl = document.createElement("div");
      dayEl.classList.add("calendar-day");
      if (sessionDates.includes(dateStr)) {
        dayEl.classList.add("session");
      }
      dayEl.textContent = day;
      container.appendChild(dayEl);
    }
  }

  function setupCalendarDropdown() {
    const now = new Date();
    const select = document.getElementById("calendarMonth");
    for (let i = 0; i < 12; i++) {
      const d = new Date(now.getFullYear(), now.getMonth() - i, 1);
      const option = document.createElement("option");
      option.value = d.getFullYear() + "-" + d.getMonth();
      option.textContent = d.toLocaleString('default', { month: 'long', year: 'numeric' });
      select.appendChild(option);
    }

    select.value = now.getFullYear() + "-" + now.getMonth();
    select.addEventListener("change", e => {
      const [y, m] = e.target.value.split("-").map(Number);
      populateCalendar(y, m);
    });

    populateCalendar(now.getFullYear(), now.getMonth());
  }

  // Chart logic
  const ctx = document.getElementById('trendChart').getContext('2d');
  const chart = new Chart(ctx, {
    type: 'bar',
    data: {
      labels: [],
      datasets: [{
        label: 'Daily Spend ($)',
        data: [],
        backgroundColor: '#0d6efd'
      }]
    },
    options: {
      responsive: true,
      plugins: { legend: { display: false } },
      scales: { y: { beginAtZero: true } }
    }
  });

  function updateChart(monthKey) {
    const data = dailyChartData[monthKey] || [];
    chart.data.labels = data.map(d => d.day);
    chart.data.datasets[0].data = data.map(d => d.total.toFixed(2));
    chart.update();
  }

  function setupChartDropdown() {
    const now = new Date();
    const select = document.getElementById("chartMonth");
    for (let i = 0; i < 12; i++) {
      const d = new Date(now.getFullYear(), now.getMonth() - i, 1);
      const key = d.getFullYear() + "-" + d.getMonth();
      const option = document.createElement("option");
      option.value = key;
      option.textContent = d.toLocaleString('default', { month: 'long', year: 'numeric' });
      select.appendChild(option);
    }

    select.value = now.getFullYear() + "-" + now.getMonth();
    select.addEventListener("change", e => {
      const [y, m] = e.target.value.split("-").map(Number);
      const key = y + '-' + String(m + 1).padStart(2, '0');
      updateChart(key);
    });

    const defaultKey = now.getFullYear() + '-' + String(now.getMonth() + 1).padStart(2, '0');
    updateChart(defaultKey);
  }

  setupCalendarDropdown();
  setupChartDropdown();
</script>
</body>
</html>
