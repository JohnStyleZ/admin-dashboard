<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Admin Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body { font-family: 'Segoe UI', sans-serif; background-color: #f7f9fc; }
    .sidebar { width: 250px; height: 100vh; background-color: #343a40; position: fixed; color: #fff; }
    .sidebar h2 { padding: 20px; font-size: 20px; background-color: #212529; margin: 0; }
    .sidebar a { color: #adb5bd; display: block; padding: 15px 20px; text-decoration: none; }
    .sidebar a:hover, .sidebar a.active { background-color: #495057; color: #fff; }
    .main { margin-left: 250px; padding: 30px; }
    .card { border: none; border-radius: 10px; }
    .stats-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; }
    .calendar-day {
      background: #fff; border: 1px solid #dee2e6;
      padding: 6px; text-align: center; border-radius: 4px; font-size: 12px;
    }
    .calendar-day.session { background-color: #0d6efd; color: #fff; font-weight: bold; }
    .calendar-day.blank { background: none; border: none; }
    #calendar { display: grid; grid-template-columns: repeat(7, 1fr); gap: 3px; }
  </style>
</head>
<body>

<div class="sidebar">
  <h2>Admin Panel</h2>
  <a class="active" href="/admin/dashboard">Dashboard</a>
  <a href="#">Analytics</a>
  <a href="#">Reports</a>
  <a href="#">Settings</a>
  <a href="/admin/logout">Logout</a>
</div>

<div class="main">
  <h2 class="mb-4">Welcome, <%= admin.username %></h2>
  <div class="stats-grid">
    <div class="card p-4 shadow-sm"><h5>Total Participants</h5><p class="fs-4"><%= totalParticipants %></p></div>
    <div class="card p-4 shadow-sm"><h5>Gender Ratio</h5><p>ðŸ‘¨ <%= maleCount %> | ðŸ‘© <%= femaleCount %></p></div>
    <div class="card p-4 shadow-sm"><h5>Average Cost per Person</h5><p class="fs-4">$<%= avgCost %></p></div>
    <div class="card p-4 shadow-sm"><h5>Total Spent</h5><p class="fs-4">$<%= totalSpent %></p></div>
  </div>

  <div class="row mt-4">
    <div class="col-md-4 mb-4">
      <div class="card p-3 shadow-sm">
        <h5 class="mb-2">Post-Events</h5>
        <select id="calendarMonth" class="form-select form-select-sm mb-2"></select>
        <div id="calendar"></div>
        <hr>
        <h6>Top 10 Participants</h6>
        <ol class="mt-2 small">
          <% topParticipants.forEach(p => { %>
            <li><%= p.name %> - <%= p.count %> sessions</li>
          <% }) %>
        </ol>
      </div>
    </div>

    <div class="col-md-8 mb-4">
      <div class="card p-3 shadow-sm">
        <h5 class="mb-3">Sessions by Group Size & Gender</h5>
        <canvas id="groupSizeChart" height="180"></canvas>
      </div>

      <div class="card p-4 shadow-sm mt-4">
        <div class="d-flex justify-content-between align-items-center mb-3">
          <h5 class="mb-0">Daily Spend - Current Month</h5>
          <select id="chartMonth" class="form-select form-select-sm w-auto"></select>
        </div>
        <canvas id="trendChart" height="100"></canvas>
      </div>
    </div>
  </div>
</div>

<script>
  const sessionDates = <%- JSON.stringify(sessionDates) %>;
  const dailyChartData = <%- JSON.stringify(dailyChartByMonth) %>;
  const groupSizeLabels = <%- JSON.stringify(groupSizeLabels) %>;
  const groupSizeMale = <%- JSON.stringify(groupSizeMale) %>;
  const groupSizeFemale = <%- JSON.stringify(groupSizeFemale) %>;

  // Calendar Logic
  function populateCalendar(year, month) {
    const container = document.getElementById("calendar");
    container.innerHTML = "";
    const firstDay = new Date(year, month, 1).getDay();
    const daysInMonth = new Date(year, month + 1, 0).getDate();
    for (let i = 0; i < firstDay; i++) {
      const blank = document.createElement("div");
      blank.classList.add("calendar-day", "blank");
      container.appendChild(blank);
    }
    for (let day = 1; day <= daysInMonth; day++) {
      const dateStr = year + '-' + String(month + 1).padStart(2, '0') + '-' + String(day).padStart(2, '0');
      const dayEl = document.createElement("div");
      dayEl.classList.add("calendar-day");
      if (sessionDates.includes(dateStr)) dayEl.classList.add("session");
      dayEl.textContent = day;
      container.appendChild(dayEl);
    }
  }
  function setupCalendarDropdown() {
    const now = new Date();
    const select = document.getElementById("calendarMonth");
    for (let i = 0; i < 12; i++) {
      const d = new Date(now.getFullYear(), now.getMonth() - i, 1);
      const option = document.createElement("option");
      option.value = d.getFullYear() + "-" + d.getMonth();
      option.textContent = d.toLocaleString('default', { month: 'long', year: 'numeric' });
      select.appendChild(option);
    }
    select.value = now.getFullYear() + "-" + now.getMonth();
    select.addEventListener("change", e => {
      const [y, m] = e.target.value.split("-").map(Number);
      populateCalendar(y, m);
    });
    populateCalendar(now.getFullYear(), now.getMonth());
  }

  // Daily Spending Chart
  const trendChart = new Chart(document.getElementById('trendChart').getContext('2d'), {
    type: 'bar',
    data: { labels: [], datasets: [{ label: 'Daily Spend ($)', data: [], backgroundColor: '#0d6efd' }] },
    options: { responsive: true, plugins: { legend: { display: false } }, scales: { y: { beginAtZero: true } } }
  });
  function updateChart(monthKey) {
    const data = dailyChartData[monthKey] || [];
    trendChart.data.labels = data.map(d => d.day);
    trendChart.data.datasets[0].data = data.map(d => d.total.toFixed(2));
    trendChart.update();
  }
  function setupChartDropdown() {
    const now = new Date();
    const select = document.getElementById("chartMonth");
    for (let i = 0; i < 12; i++) {
      const d = new Date(now.getFullYear(), now.getMonth() - i, 1);
      const key = d.getFullYear() + "-" + d.getMonth();
      const option = document.createElement("option");
      option.value = key;
      option.textContent = d.toLocaleString('default', { month: 'long', year: 'numeric' });
      select.appendChild(option);
    }
    select.value = now.getFullYear() + "-" + now.getMonth();
    select.addEventListener("change", e => {
      const [y, m] = e.target.value.split("-").map(Number);
      const key = y + '-' + String(m + 1).padStart(2, '0');
      updateChart(key);
    });
    const defaultKey = now.getFullYear() + '-' + String(now.getMonth() + 1).padStart(2, '0');
    updateChart(defaultKey);
  }

  // Group Size Chart
  new Chart(document.getElementById('groupSizeChart').getContext('2d'), {
    type: 'bar',
    data: {
      labels: groupSizeLabels,
      datasets: [
        { label: 'Male', data: groupSizeMale, backgroundColor: '#007bff' },
        { label: 'Female', data: groupSizeFemale, backgroundColor: '#e83e8c' }
      ]
    },
    options: {
      responsive: true,
      plugins: { title: { display: false }, legend: { position: 'top' } },
      scales: { y: { beginAtZero: true } }
    }
  });

  setupCalendarDropdown();
  setupChartDropdown();
</script>
</body>
</html>